{
    "homepage": "https://www.libsdl.org/projects/SDL_mixer/",
    "description": "mixer library for Simple DirectMedia Layer",
    "version": "2.0.4",
    "license": "Zlib",
    "depends": "sdl2",
    "url": [
        "https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-devel-$version-VC.zip",
        "https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-$version.zip"
    ],
    "hash": [
        "258788438b7e0c8abb386de01d1d77efe79287d9967ec92fbb3f89175120f0b0",
        "9affb8c7bf6fbffda0f6906bfb99c0ea50dca9b188ba9e15be90042dc03c5ded"
    ],
    "installer": {
        "script": [
            "# organize files",
            "mkdir -f \"$dir\\lib\\pkgconfig\" > $null",
            "mkdir -f \"$dir\\include\\SDL2\" > $null",
            "# make arch consistent with scoop naming",
            "mv \"$dir\\SDL2_mixer-$version\\lib\\x86\" \"$dir\\SDL2_mixer-$version\\lib\\32bit\"",
            "mv \"$dir\\SDL2_mixer-$version\\lib\\x64\" \"$dir\\SDL2_mixer-$version\\lib\\64bit\"",
            "# only install the requested architecture",
            "mv \"$dir\\SDL2_mixer-$version\\lib\\$architecture\\*\" \"$dir\\lib\"",
            "",
            "$srcdir = \"$dir\\SDL2_mixer-$version\\\"",
            "mv \"$srcdir\\include\\*.h\"  \"$dir\\include\\SDL2\"",
            "rm \"$dir\\include\\*.h.*\"",
            "$pcin = \"$srcdir\\SDL2_mixer.pc.in\"",
            "$pcout = \"$dir\\lib\\pkgconfig\\SDL2_mixer.pc\"",
            "sc $pcout ((gc $pcin) `",
            "    -replace \"@prefix@\",\"\" `",
            "    -replace \"@exec_prefix@\",\"`${prefix}\" `",
            "    -replace \"@libdir@\",\"`${exec_prefix}/lib\" `",
            "    -replace \"@includedir@\",\"`${prefix}/include\" `",
            "    -replace \"@VERSION@\",\"$version\" `",
            "    -replace \"@SDL_VERSION@\",\"2.0.7\" `",
           ")",
            "",
            "rm -r \"$srcdir\"",
            "",
            "$pcdir = \"$(current_dir $dir)\\lib\\pkgconfig\"",
            "$cmdir = \"$(current_dir $dir)\"",
            "# future sessions",
            "$null, $currpath = strip_path (env 'PKG_CONFIG_PATH' $global) $pcdir",
            "env 'PKG_CONFIG_PATH' $global \"$pcdir;$currpath\"",
            "$null, $currpath = strip_path (env 'CMAKE_PREFIX_PATH' $global) $cmddir",
            "env 'CMAKE_PREFIX_PATH' $global \"$cmddir;$currpath\"",
            "# this session",
            "$null, $env:PKG_CONFIG_PATH = strip_path $env:PKG_CONFIG_PATH $pcdir",
            "$env:PKG_CONFIG_PATH = \"$pcdir;$env:PKG_CONFIG_PATH\"",
            "$null, $env:CMAKE_PREFIX_PATH = strip_path $env:CMAKE_PREFIX_PATH $cmdir",
            "$env:CMAKE_PREFIX_PATH = \"$cmdir;$env:CMAKE_PREFIX_PATH\""
        ]
    },
    "uninstaller": {
        "script": [
            "$pcdir = \"$(current_dir $dir)\\lib\\pkgconfig\"",
            "$cmdir = \"$(current_dir $dir)\"",
            "# future sessions",
            "$was_in_path, $newpath = strip_path (env 'PKG_CONFIG_PATH' $global) $pcdir",
            "if($was_in_path) {",
            "    write-host \"Removing $(friendly_path $pcdir) from your path.\"",
            "    env 'PKG_CONFIG_PATH' $global $newpath",
            "}",
            "$was_in_path, $newpath = strip_path (env 'CMAKE_PREFIX_PATH' $global) $cmdir",
            "if($was_in_path) {",
            "    write-host \"Removing $(friendly_path $cmdir) from your path.\"",
            "    env 'CMAKE_PREFIX_PATH' $global $newpath",
            "}",
            "# current session",
            "$was_in_path, $newpath = strip_path $env:PKG_CONFIG_PATH $pcdir",
            "if($was_in_path) { $env:PKG_CONFIG_PATH = $newpath }",
            "$was_in_path, $newpath = strip_path $env:CMAKE_PREFIX_PATH $cmdir",
            "if($was_in_path) { $env:CMAKE_PREFIX_PATH = $newpath }"
        ]
    }
}
